const venom = require('venom-bot');
const fs = require('fs');
const { geminiResponse } = require('./modules/gemini');
const { transcribeAudio } = require('./modules/whisper');
const { textToSpeech } = require('./modules/gtts');
const { extractTextFromImage } = require('./modules/ocr');

venom.create({ session: 'bot_ia' })
  .then(client => start(client))
  .catch((e) => console.log('Erro ao iniciar:', e));

function start(client) {
  client.onMessage(async (msg) => {
    if (msg.isGroupMsg) return;

    const from = msg.from;

    if (msg.type === 'chat') {
      const reply = await geminiResponse(msg.body);
      await client.sendText(from, reply);

      // Resposta em áudio também
      const audioPath = await textToSpeech(reply);
      await client.sendVoice(from, audioPath);
    }

    else if (msg.type === 'ptt') {
      const base64 = msg.body.split(',')[1];
      fs.writeFileSync('./audios/audio.ogg', Buffer.from(base64, 'base64'));

      const texto = await transcribeAudio('./audios/audio.ogg');
      const reply = await geminiResponse(texto);
      await client.sendText(from, reply);
    }

    else if (msg.type === 'image') {
      const imgBuffer = Buffer.from(msg.body.split(',')[1], 'base64');
      fs.writeFileSync('./imagens/img.jpg', imgBuffer);
      const ocrText = await extractTextFromImage('./imagens/img.jpg');
      const reply = await geminiResponse(ocrText);
      await client.sendText(from, `Texto da imagem:\n${ocrText}\n\n${reply}`);
    }
  });
}