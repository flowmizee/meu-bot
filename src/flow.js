const { getSheetData, updateSheetData } = require('./sheets');
const tesseract = require('tesseract.js');
const axios = require('axios');

async function handleMessage(sock, message) {
  const from = message.key.remoteJid;

  // Checa se √© texto ou m√≠dia
  if (message.message?.conversation || message.message?.imageMessage || message.message?.documentMessage) {
    // Envia menu com bot√µes
    await sock.sendMessage(from, {
      text: 'Ol√°! Aqui est√° nosso menu üìù',
      footer: 'Escolha uma op√ß√£o abaixo:',
      buttons: [
        { buttonId: 'pedido', buttonText: { displayText: 'Fazer Pedido' }, type: 1 },
        { buttonId: 'promocao', buttonText: { displayText: 'Ver Promo√ß√µes' }, type: 1 },
        { buttonId: 'atendimento', buttonText: { displayText: 'Falar com Atendimento' }, type: 1 }
      ],
      headerType: 1
    });
  }
}

// Fun√ß√£o para OCR de comprovante
async function validateReceipt(buffer) {
  const { data: { text } } = await tesseract.recognize(buffer, 'por');
  return text; // voc√™ pode criar l√≥gica de valida√ß√£o
}

module.exports = { handleMessage, validateReceipt };
